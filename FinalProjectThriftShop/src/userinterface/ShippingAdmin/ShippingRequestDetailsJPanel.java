/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ShippingAdmin;

import Business.DeliveryMan.DeliveryMan;
import Business.DeliveryMan.DeliveryManDirectory;
import Business.EcoSystem;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import Business.WorkQueue.CustomerWorkOrder;
import Business.WorkQueue.OrderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vishakha
 */
public class ShippingRequestDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrderDetailsJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    EcoSystem ecosystem;
    CustomerWorkOrder workRequest;
    double total = 0.0;
    private DefaultTableModel orderTable;
    private UserAccountDirectory userAccountDirectory;
    private DeliveryManDirectory deliveryManDirectory;
    private int index = -1;

    public ShippingRequestDetailsJPanel(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount account, CustomerWorkOrder workRequest) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.account = account;
        this.workRequest = workRequest;
        
        this.userAccountDirectory = ecosystem.getUserAccountDirectory();
        
      //  System.out.println("userinterface.RestaurantAdminRole.ManageOrderDetailsJPanel.<init>()"+deliveryManDirectory.getDeliveryManList());
        
      populateDeliveryManList(userAccountDirectory.getUserAccountList());
        
        
        display();
    }

    private void display() {
        
        populateDeliveryManUI();
        
        restaurantName.setText(workRequest.getBestBidCustomer());
        requestDate.setText(workRequest.getRequestDate().toString());
        status.setText(workRequest.getStatus());
       

//        orderTable.setRowCount(0);
       

    }

    private void populateDeliveryManUI() {
        if(workRequest.getDeliverMan() == null &&  
                !("ordered".equalsIgnoreCase(workRequest.getStatus()) || "declined".equalsIgnoreCase(workRequest.getStatus()))){
            assignDeliveryPersonLabel.setVisible(true);
            assignDeliveryPerson.setVisible(true);
            deliveryManNameValue.setVisible(false);
            jButtonAddDeliveryMan.setVisible(true);
            deliveryManLabel.setVisible(false);
            System.out.println("populateDeliveryManUI()"+1);
        }else{
            jButtonAddDeliveryMan.setVisible(false);
            assignDeliveryPersonLabel.setVisible(false);
            assignDeliveryPerson.setVisible(false);
            deliveryManNameValue.setVisible(true);
            deliveryManLabel.setVisible(true);
             System.out.println("populateDeliveryManUI()"+2);
            if(workRequest.getDeliverMan() != null){
                System.out.println("workRequest"+workRequest.getStatus());
                System.out.println("userinterface.RestaurantAdminRole.ManageOrderDetailsJPanel.populateDeliveryManUI()"+workRequest.getDeliverMan().getDeliveryManName());
                deliveryManNameValue.setText(workRequest.getDeliverMan().getDeliveryManName());
            }else{
              deliveryManNameValue.setText("Not Assigned");  
            }
        }
    }
    
      public void populateDeliveryManList(ArrayList<UserAccount> userAccountDirectory) {
        if(workRequest.getDeliverMan() == null) {
            assignDeliveryPerson.setVisible(true);
             for(UserAccount ua : userAccountDirectory){
                    if(ua instanceof DeliveryMan){
                    DeliveryMan dm = (DeliveryMan)ua;
                    assignDeliveryPerson.addItem(dm.getDeliveryManName());
                }
                 
               // 
              }
        }else{
            assignDeliveryPerson.setVisible(false);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        deliveryManLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        restaurantName = new javax.swing.JLabel();
        deliveryManNameValue = new javax.swing.JLabel();
        requestDate = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        btnBack1 = new javax.swing.JButton();
        assignDeliveryPerson = new javax.swing.JComboBox<>();
        assignDeliveryPersonLabel = new javax.swing.JLabel();
        jButtonAddDeliveryMan = new javax.swing.JButton();

        jLabel4.setText("Customer Name");

        deliveryManLabel.setText("Delivery Man Name");

        jLabel6.setText("Request Date");

        restaurantName.setText("<value>");

        deliveryManNameValue.setText("<value>");

        requestDate.setText("<value>");

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Shipping Order Details");

        jLabel14.setText("Status");

        status.setText("<value>");

        btnBack1.setText("<Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        assignDeliveryPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignDeliveryPersonActionPerformed(evt);
            }
        });

        assignDeliveryPersonLabel.setText("Assign Delivery Person");

        jButtonAddDeliveryMan.setText("Assign");
        jButtonAddDeliveryMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddDeliveryManActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnBack1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(80, 80, 80)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(restaurantName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                    .addComponent(requestDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(status, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(assignDeliveryPersonLabel)
                                    .addComponent(deliveryManLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(80, 80, 80)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deliveryManNameValue, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(assignDeliveryPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonAddDeliveryMan)))))))
                .addContainerGap(134, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignDeliveryPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignDeliveryPersonLabel)
                    .addComponent(jButtonAddDeliveryMan))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deliveryManLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deliveryManNameValue))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(restaurantName)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(requestDate)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(status))
                .addContainerGap(469, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        ShippingOrderDetailsJPanel manageOrderJPanel = new ShippingOrderDetailsJPanel(userProcessContainer, account, ecosystem);
            userProcessContainer.add("ManageOrderJPanel", manageOrderJPanel);
            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void assignDeliveryPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignDeliveryPersonActionPerformed
        // TODO add your handling code here:
        index = assignDeliveryPerson.getSelectedIndex();
        //clear of the selected items
        System.out.println("index-->"+index);
       
    }//GEN-LAST:event_assignDeliveryPersonActionPerformed

    private void jButtonAddDeliveryManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddDeliveryManActionPerformed
        // TODO add your handling code here:
         System.out.println("assign delivery");
        index = assignDeliveryPerson.getSelectedIndex();
        
        if (index >= 0) {

            for (UserAccount ua : ecosystem.getUserAccountDirectory().getUserAccountList()) {
                if (ua instanceof DeliveryMan) {
                    DeliveryMan deliveryMan = (DeliveryMan) ua;
                    if (deliveryMan.getDeliveryManName().equals(assignDeliveryPerson.getSelectedItem().toString())) {
                        System.out.println("userinterface.RestaurantAdminRole.ManageOrderDetailsJPanel.addDeliveryPersonActionPerformed()" + deliveryMan);
                        System.out.println("workrequest delivery man adding details==>" + deliveryMan.getUsername());
                        workRequest.setDeliverMan((DeliveryMan) deliveryMan);
                        workRequest.setStatus("Assigned");
                        System.out.println("workrequest" + workRequest.getStatus());
                        JOptionPane.showMessageDialog(null, deliveryMan + " Delivery person assigned successfully!!!");
                        //populateDeliveryManUI();
                    }
                }
            }
    }//GEN-LAST:event_jButtonAddDeliveryManActionPerformed
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> assignDeliveryPerson;
    private javax.swing.JLabel assignDeliveryPersonLabel;
    private javax.swing.JButton btnBack1;
    private javax.swing.JLabel deliveryManLabel;
    private javax.swing.JLabel deliveryManNameValue;
    private javax.swing.JButton jButtonAddDeliveryMan;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel requestDate;
    private javax.swing.JLabel restaurantName;
    private javax.swing.JLabel status;
    // End of variables declaration//GEN-END:variables

    
}
