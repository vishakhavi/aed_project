/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ShippingAdmin;

import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Organization.ShippingUnitOrganization;
import Business.Role.ShippingAdminRole;

import Business.UserAccount.UserAccount;
import Business.Utils.HeaderColors;
import Business.WorkQueue.CustomerWorkOrder;

import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dhankuwarsisodiya
 */
public class ShippingUnitWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DisasterAdminSceneManageJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    Organization organization;
    Enterprise enterprise;
    Network network;
    EcoSystem business;
    private List<WorkRequest> workRequestList;
    private CustomerWorkOrder workRequest;
    private int index = -1;

    public ShippingUnitWorkRequestJPanel(JPanel userProcessContainer, Enterprise enterprise, EcoSystem business, Organization organization) {
        initComponents();
       // initListners();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.business = business;
        this.organization = organization;

        tblManageAssigned.getTableHeader().setDefaultRenderer(new HeaderColors());
        populateTable();
        populateSiteNameCombo();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageAssigned = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        siteNameComboBox = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1058, 840));
        setPreferredSize(new java.awt.Dimension(1058, 840));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setForeground(new java.awt.Color(0, 102, 255));

        tblManageAssigned.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        tblManageAssigned.setForeground(new java.awt.Color(25, 56, 82));
        tblManageAssigned.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Customer Name ", "Company Name", "Order date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblManageAssigned.setSelectionBackground(new java.awt.Color(56, 90, 174));
        jScrollPane1.setViewportView(tblManageAssigned);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 990, 220));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(25, 56, 82));
        jLabel1.setText("Shipping Company Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 370, -1, 20));

        siteNameComboBox.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        siteNameComboBox.setForeground(new java.awt.Color(25, 56, 82));
        siteNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(siteNameComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 360, 190, -1));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(25, 56, 82));
        jButton2.setText("Assign");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 470, -1, -1));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(25, 56, 82));
        jLabel3.setText("MANAGE SHIPPING COMPANY");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 13, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/IncidentOPAQUESCENE.png"))); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 1010, 450));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/crime128x.png"))); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //CustomerWorkOrder orderWorkRequest = (CustomerWorkOrder) sceneManagerCombo.getSelectedItem();
        index = siteNameComboBox.getSelectedIndex();
        //clear of the selected items
        System.out.println("index-->" + index);
        System.out.println("assign delivery");

        if (index >= 0) {

            for (Organization scomp : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (scomp instanceof ShippingUnitOrganization) {
                    ShippingUnitOrganization suo = (ShippingUnitOrganization) scomp;
                    if (suo.getName().equalsIgnoreCase(siteNameComboBox.getSelectedItem().toString())) {
                        //tblManageAssigned.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                            
                                int selectedRow = tblManageAssigned.getSelectedRow();
                                if (selectedRow >= 0) {
                                    CustomerWorkOrder orderWorkRequest = (CustomerWorkOrder) tblManageAssigned.getValueAt(selectedRow, 0);
                                   
                                        if (orderWorkRequest != null) {
                                           
                                            orderWorkRequest.setShippingAssigned((ShippingUnitOrganization)siteNameComboBox.getSelectedItem());
                                            orderWorkRequest.setStatus("Assigned");
                                           System.out.println("shipping company assigned" + orderWorkRequest.getShippingAssigned());
                                      //      System.out.println("workrequest" + workRequest.getStatus());
                                           
                                            JOptionPane.showMessageDialog(null, suo.getName() + " Shipping Company assigned successfully!!!");
                                             populateTable();
                                        

                                    }
                                }
                            
                       // });
                    }
                }
            }
        }
    

    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox siteNameComboBox;
    private javax.swing.JTable tblManageAssigned;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        tblManageAssigned.getTableHeader().setDefaultRenderer(new HeaderColors());
        DefaultTableModel model = (DefaultTableModel) tblManageAssigned.getModel();
        model.setRowCount(0);
        workRequestList = business.getWorkQueue().getWorkRequestList();
        for (WorkRequest wr : workRequestList) {
            Object row[] = new Object[tblManageAssigned.getColumnCount()];
            if (wr instanceof CustomerWorkOrder) {
                CustomerWorkOrder cwo = (CustomerWorkOrder) wr;
                row[0] = cwo;
                row[1] = cwo.getBestBidCustomer();
                row[2] = (cwo.getShippingAssigned() != null) ? cwo.getShippingAssigned().getName() : "Not Assigned";
                row[3] = cwo.getRequestDate();

                model.addRow(row);
            }
        }
    }

    private void populateSiteNameCombo() {
        siteNameComboBox.removeAllItems();
        /*for (WorkRequest wr : enterprise.getWorkQueue().getWorkRequestList()) {
            if(wr instanceof VolunteerSceneRequest && ((VolunteerSceneRequest) wr).getSceneManager() == null) {
                siteNameComboBox.addItem(((VolunteerSceneRequest) wr));
            }
            
        }*/
        
        for (Organization scomp : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (scomp instanceof ShippingUnitOrganization) {
                ShippingUnitOrganization suo = (ShippingUnitOrganization) scomp;
                siteNameComboBox.addItem(suo);
            }
        }
    }

    
}
