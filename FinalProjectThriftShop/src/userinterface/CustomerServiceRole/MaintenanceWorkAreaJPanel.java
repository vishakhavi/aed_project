/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerServiceRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Organization.MaintenanceOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CustomerWorkOrder;
import Business.WorkQueue.WorkRequest;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author madhurimachatterjee
 */
public class MaintenanceWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MaintenanceWorkAreaJPanel
     */
    JPanel userProcessContainer;
    UserAccount useraccount;
    EcoSystem business;
    public MaintenanceWorkAreaJPanel(JPanel userProcessContainer, UserAccount useraccount, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.useraccount = useraccount;
        this.business = business;
        //System.out.println(this.useraccount.getEmployee().getName());
        populateTable();
        
    }

    public void populateTable()
    {
//        DefaultTableModel model = (DefaultTableModel)tblRequests.getModel();
//        model.setRowCount(0);
//        for (WorkRequest wr :  business.getCustomerServiceOrg().getWorkQueue().getWorkRequestList()) {
//            Object row[] = new Object[tblRequests.getColumnCount()];
//            CustomerWorkOrder cwo = (CustomerWorkOrder) wr;
//            System.out.println(cwo.getMaintenanceOpAssigned());
//            if(useraccount.getUsername().equals(cwo.getMaintenanceOpAssigned().getUserAccountAssoc().getUsername()))
//            {
//                row[0] = cwo;
//                row[1] = cwo.getRequestDate();
//                row[2] = cwo.getMaintenanceOpAssigned();
//                row[3] = cwo.getStatus();
//                row[4] = cwo.getResolveDate();
//                model.addRow(row); 
//            }
//        }
        DefaultTableModel model = (DefaultTableModel)tblRequests.getModel();
        model.setRowCount(0);

        for (Organization org :  business.getMaintenanceOperators().getOrganizationList()) {
            Object row[] = new Object[tblRequests.getColumnCount()];
            MaintenanceOrganization maintenanceOp = (MaintenanceOrganization) org;
            //System.out.println(maintenanceOp.getUserAccountAssoc().getUsername());
            if(maintenanceOp.getUserAccountAssoc().getUsername().equals(useraccount.getEmployee().getName()))
            {
                for(WorkRequest wr : maintenanceOp.getWorkQueue().getWorkRequestList())
                {
                    CustomerWorkOrder cwo = (CustomerWorkOrder) wr;
                    row[0] = cwo.getRequestDate();
                    row[1] = cwo;
                    row[2] = maintenanceOp;
                    row[3] = cwo.getStatus();
                    row[4] = cwo.getResolveDate();
                    model.addRow(row);
                }
            }
        }
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequests = new javax.swing.JTable();
        btnClose = new javax.swing.JButton();
        btnReOpen = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Maintenance Processes");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 52));

        tblRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RequestDate", "Product", "Maintenance Incharge", "Status", "Resolved Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRequests.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblRequests);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 590, 120));

        btnClose.setBackground(new java.awt.Color(255, 255, 255));
        btnClose.setText("Close Request");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 145, -1));

        btnReOpen.setBackground(new java.awt.Color(255, 255, 255));
        btnReOpen.setText("Re-open Request");
        btnReOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReOpenActionPerformed(evt);
            }
        });
        add(btnReOpen, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 200, 145, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/maintenanceIcon.png"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 110, 110));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/maintenanceBg.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        int selectedOrder = tblRequests.getSelectedRow();
        if (selectedOrder >= 0)
        {
            CustomerWorkOrder selectedWorkOrder = (CustomerWorkOrder) tblRequests.getValueAt(selectedOrder, 1);
            
            if(selectedWorkOrder.getStatus().equals("Maintenance Processed"))
            {
                JOptionPane.showMessageDialog(null,"Request already processed!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            else
            {
                selectedWorkOrder.setStatus("Maintenance Processed");
                selectedWorkOrder.setResolveDate(new Date());

                JOptionPane.showMessageDialog(null, "Order processed successfully !!!");
                populateTable();
            }
        } 
        else 
        {
            JOptionPane.showMessageDialog(null,"Please select a request to be processed!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnReOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReOpenActionPerformed
        // TODO add your handling code here:
        int selectedOrder = tblRequests.getSelectedRow();
        if (selectedOrder >= 0)
        {
            CustomerWorkOrder selectedWorkOrder = (CustomerWorkOrder) tblRequests.getValueAt(selectedOrder, 1);
            
            if(selectedWorkOrder.getStatus().equals("Maintenance to be Processed"))
            {
                JOptionPane.showMessageDialog(null,"Request already open to be processed!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            else
            {
                selectedWorkOrder.setStatus("Maintenance to be Processed");
                selectedWorkOrder.setResolveDate(null);

                JOptionPane.showMessageDialog(null, "Request re-opened successfully!!!");
                populateTable();
            }
        } 
        else 
        {
            JOptionPane.showMessageDialog(null,"Please select a request to be processed!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnReOpenActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnReOpen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRequests;
    // End of variables declaration//GEN-END:variables
}
