/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Ads;
import Business.Customer.Customer;
import Business.Customer.CustomerDirectory;
import Business.Customer.Post;
import Business.EcoSystem;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import com.teamdev.jxbrowser.browser.Browser;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import userinterface.LoadMaps;

/**
 *
 * @author Vishakha
 */
public class PostAdJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    
    private Ads adsList;
    private String filepathValue;
    private Customer customer;
    String location;
    double longitude;
    double latitude;
    Browser browser;
    private CustomerDirectory customerDirectory;
    private ArrayList<Customer> customerList;
    private ArrayList<UserAccount> userDirectory;
    private EcoSystem ecosystem;
    private Organization organization;

    /**
     * Creates new form PostAdJPanel
     */
    public PostAdJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem,Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.ecosystem = ecosystem;
        adsList = ecosystem.getAdsList();
        userDirectory = ecosystem.getUserAccountDirectory().getUserAccountList();
        customer = (Customer)account;
        this.organization = organization;
       //customerDirectory = organization.getCustomerDirectory();
       
      //  System.out.println("enterprise-->"+enterprise.getOrganizationDirectory().getOrganizationList().size);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        requestTestJButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldProductName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldProductCategory = new javax.swing.JTextField();
        jTextFieldProductPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        adImage = new javax.swing.JLabel();
        jButtonUpload = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextFieldItemLocation = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        productNameErrorLabel = new javax.swing.JLabel();
        productCategoryErrorLabel = new javax.swing.JLabel();
        priceErrorLabel = new javax.swing.JLabel();
        descriptionErrorLabel = new javax.swing.JLabel();
        jTextFieldProductDescription = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1058, 840));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/post_bg_op.jpg"))); // NOI18N
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, -1, 290));

        requestTestJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        requestTestJButton.setText("Post");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(requestTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 570, -1, -1));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Post Ad");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 14, 740, 30));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setText("Product :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 110, 20));
        jPanel1.add(jTextFieldProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, 160, 30));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setText("Product Category:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, 130, -1));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setText("Price:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, 130, 20));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel4.setText("Description:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 150, 20));
        jPanel1.add(jTextFieldProductCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 150, 160, 30));
        jPanel1.add(jTextFieldProductPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 190, 160, 30));

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel6.setText("Pictures:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 170, -1));
        jPanel1.add(adImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 320, 170, 110));

        jButtonUpload.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonUpload.setText("Upload");
        jButtonUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUploadActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonUpload, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 320, -1, -1));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel7.setText("Location:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 470, 120, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Set Location");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 470, -1, -1));

        jTextFieldItemLocation.setEditable(false);
        jPanel1.add(jTextFieldItemLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 470, 170, 30));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/post_icon.png"))); // NOI18N
        jLabel8.setText("jLabel8");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 110, 110));

        productNameErrorLabel.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(productNameErrorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 110, 90, 20));

        productCategoryErrorLabel.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(productCategoryErrorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 160, 130, 20));

        priceErrorLabel.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(priceErrorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 200, 130, 20));

        descriptionErrorLabel.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(descriptionErrorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 250, 130, 20));
        jPanel1.add(jTextFieldProductDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 240, 160, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1182, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        LoadMaps loadMaps = new LoadMaps(userProcessContainer,ecosystem);
        userProcessContainer.add("LoadMaps", loadMaps);
        CardLayout layout = (CardLayout)this.userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUploadActionPerformed
        // TODO add your handling code here:
        try{
            JFileChooser selectFile = new JFileChooser();
            int approveValue = selectFile.showOpenDialog(this);
            if(approveValue == JFileChooser.APPROVE_OPTION){
                File filePath = selectFile.getSelectedFile();
                filepathValue = filePath.getPath();
                Image profilePic = ImageIO.read(new File(filepathValue));
                Image newImg = profilePic.getScaledInstance(80, 80, Image.SCALE_AREA_AVERAGING);
                adImage.setIcon(new ImageIcon(newImg));
                JOptionPane.showMessageDialog(null, "Image uploaded successfully");
            }
        }catch(Exception e){
            System.err.println("Exception while uploading or reading the image"+e);
    }//GEN-LAST:event_jButtonUploadActionPerformed
    }
    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
    if (jTextFieldProductName.getText().trim().isEmpty()
                && jTextFieldProductCategory.getText().trim().isEmpty()
                && jTextFieldProductPrice.getText().trim().isEmpty()
                && jTextFieldItemLocation.getText().trim().isEmpty()
                && jTextFieldProductDescription.getText().trim().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Please Enter data to proceed!", "WARNING", JOptionPane.WARNING_MESSAGE);
            return;
        } // Name, Price, Category, Product Quantity are Empty
        else {
            productNameErrorLabel.setText("");
            priceErrorLabel.setText("");
            productCategoryErrorLabel.setText("");
            descriptionErrorLabel.setText("");

            boolean error = false;

            if (jTextFieldProductName.getText().trim().isEmpty()) {
                productNameErrorLabel.setText("Product Name cannot be empty");
                error = true;
            }

            try { //To validate if  Price is actually a number
                Double price = Double.parseDouble(jTextFieldProductPrice.getText().trim());
            } catch (NumberFormatException nfe) {
                if (jTextFieldProductPrice.getText().trim().isEmpty()) {
                    priceErrorLabel.setText("Product Price cannot be empty");
                } else {
                    priceErrorLabel.setText(" Product Price is not in Double format");
                }
                error = true;
            }

            if (jTextFieldProductCategory.getText().trim().isEmpty()) {
                productCategoryErrorLabel.setText("Product Category cannot be empty");
                error = true;
            }
            if (jTextFieldProductDescription.getText().trim().isEmpty()) {
                descriptionErrorLabel.setText("Please enter some description for product");
                error = true;
            }

            

            if (error) {
                return;
            }
        }


        Post post = new Post(jTextFieldProductName.getText(), Double.valueOf(jTextFieldProductPrice.getText()),
            jTextFieldProductCategory.getText(),jTextFieldProductDescription.getText(),
            filepathValue,longitude, latitude,location);

        if(adsList != null && customer.getAdsList() != null){

            customer.getAdsList().addPost(post);
            ecosystem.getAdsList().addPost(post);
            ecosystem.getUserAccountDirectory().addUserAccount(customer);

        } else if(customer.getAdsList() == null && adsList != null){
            Ads ads = new Ads();
            ads.addPost(post);
            customer.setAdsList(ads);
            ecosystem.getAdsList().addPost(post);
            ecosystem.getUserAccountDirectory().addUserAccount(customer);

        }else if(adsList != null){
            Ads ads = new Ads();
            ads.addPost(post);
            customer.setAdsList(ads);
            ecosystem.getAdsList().addPost(post);
            ecosystem.getUserAccountDirectory().addUserAccount(customer);

        }
        JOptionPane.showMessageDialog(null, "Ad posted Successfully!!");
    
    }//GEN-LAST:event_requestTestJButtonActionPerformed
    public void populateLocation(String location,double longitude, double latitude) {
        
        jTextFieldItemLocation.setForeground(Color.BLACK);
        this.location = location;
        this.longitude = longitude;
        this.latitude = latitude;
        jTextFieldItemLocation.setText(location);  
        
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adImage;
    private javax.swing.JLabel descriptionErrorLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonUpload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldItemLocation;
    private javax.swing.JTextField jTextFieldProductCategory;
    private javax.swing.JTextField jTextFieldProductDescription;
    private javax.swing.JTextField jTextFieldProductName;
    private javax.swing.JTextField jTextFieldProductPrice;
    private javax.swing.JLabel priceErrorLabel;
    private javax.swing.JLabel productCategoryErrorLabel;
    private javax.swing.JLabel productNameErrorLabel;
    private javax.swing.JButton requestTestJButton;
    // End of variables declaration//GEN-END:variables
}
