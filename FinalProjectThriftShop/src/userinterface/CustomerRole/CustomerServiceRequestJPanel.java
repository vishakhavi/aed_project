/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Ads;
import Business.Customer.Customer;
import Business.Customer.Post;
import Business.EcoSystem;
import Business.Organization.CustomerServiceOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CustomerWorkOrder;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Image;
import java.util.List;
import java.awt.image.BufferedImage;
import java.io.File;
import java.net.URL;
import static java.time.Clock.system;
import java.util.ArrayList;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import userinterface.wholeSaleSupplierRole.CreateSupProductsJPanel;

/**
 *
 * @author Vishakha
 */
public class CustomerServiceRequestJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Customer customer;
    private Ads adsList;
    private DefaultTableModel viewTable;
    private EcoSystem ecosystem;
    private static final Object[][] rowData = {};
    private static final Object[] columnNames = {"Product Name","Price","Category","Description","Image"};

    /**
     * Creates new form ViewAdsJPanel
     */
    public CustomerServiceRequestJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.ecosystem = ecosystem;
       
        jTextAreaCustServiceComments.setLineWrap(true);
        jTextAreaCustServiceComments.setWrapStyleWord(true);
        
        populateOrders();
    }
   
    public void populateOrders() {
        DefaultTableModel model = (DefaultTableModel)tblCustomerOrderStatus.getModel();
        model.setRowCount(0);
        Customer c = (Customer) this.userAccount;

        for (WorkRequest wr :  c.getWorkQueue().getWorkRequestList()) {
            Object row[] = new Object[tblCustomerOrderStatus.getColumnCount()];
            CustomerWorkOrder cwo = (CustomerWorkOrder) wr;
            row[0] = cwo;
            row[1] = cwo.getRequestDate();
            row[2] = cwo.getStatus();
            row[3] = cwo.getResolveDate();
            row[4] = cwo.getLatestCustomerComment();
            model.addRow(row); 
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jBtnSubmitCustServiceRequest = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomerOrderStatus = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaCustServiceComments = new javax.swing.JTextArea();
        viewFullOrder = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Customer Service Request");

        jBtnSubmitCustServiceRequest.setText("Submit Request");
        jBtnSubmitCustServiceRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSubmitCustServiceRequestActionPerformed(evt);
            }
        });

        tblCustomerOrderStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ecommerce/Auction Product", "Request Date", "Status", "Resolved Date", "Latest comment"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCustomerOrderStatus);

        jLabel4.setText("Post comments on the issue with the order");

        jTextAreaCustServiceComments.setColumns(20);
        jTextAreaCustServiceComments.setRows(5);
        jScrollPane2.setViewportView(jTextAreaCustServiceComments);

        viewFullOrder.setText("View Full Cust Service Conversation");
        viewFullOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewFullOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(viewFullOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(39, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jBtnSubmitCustServiceRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 795, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1)
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(viewFullOrder)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnSubmitCustServiceRequest)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnSubmitCustServiceRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSubmitCustServiceRequestActionPerformed
       int selectedOrder = tblCustomerOrderStatus.getSelectedRow();
       String customerServiceComments = jTextAreaCustServiceComments.getText().trim();
       
       if (selectedOrder >= 0 && !customerServiceComments.isEmpty()){
         
           
            CustomerWorkOrder selectedWorkOrder = (CustomerWorkOrder) tblCustomerOrderStatus.getValueAt(selectedOrder, 0);
            
            if (selectedWorkOrder.getCustomerServiceHistoryComments() == null || selectedWorkOrder.getCustomerServiceHistoryComments().isEmpty()) {
                selectedWorkOrder.setCustomerServiceHistoryComments(this.userAccount.getUsername() + "-" + new Date() + ": " + customerServiceComments);
            } else {
                selectedWorkOrder.setCustomerServiceHistoryComments(selectedWorkOrder.getCustomerServiceHistoryComments() + "\n\n" + this.userAccount.getUsername() + "-" + new Date() + ": " + customerServiceComments);
            }
            selectedWorkOrder.setLatestCustomerComment("Cust: " + customerServiceComments);
            selectedWorkOrder.setRequireCustomerService(true); //Enabling this will show the list of orders requiring service.
            
            //Add this to customer Service queue
            this.ecosystem.getCustomerServiceOrg().getWorkQueue().addWorkRequest(selectedWorkOrder);
            
            JOptionPane.showMessageDialog(null, "Requested Customer Service support succesfully !!!");
            populateOrders();
       } else {
            JOptionPane.showMessageDialog(null,"Please select an Order, choose Request customer service flag, and enter yoour comments", "Warning", JOptionPane.WARNING_MESSAGE);
       }
    }//GEN-LAST:event_jBtnSubmitCustServiceRequestActionPerformed

    private void viewFullOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewFullOrderActionPerformed
        int selectedOrder = tblCustomerOrderStatus.getSelectedRow();
        
         if (selectedOrder >= 0 ){
             CustomerWorkOrder selectedWorkOrder = (CustomerWorkOrder) tblCustomerOrderStatus.getValueAt(selectedOrder, 0);
             
            ViewCustomerServiceConvoJPanel vcscj = new ViewCustomerServiceConvoJPanel(userProcessContainer, selectedWorkOrder, this);
            userProcessContainer.add("ViewCustomerRepConvo", vcscj);
            CardLayout layout = (CardLayout)this.userProcessContainer.getLayout();
            layout.next(userProcessContainer);  
         }else {
            JOptionPane.showMessageDialog(null,"Please select an Order to view Customer Service conversation", "Warning", JOptionPane.WARNING_MESSAGE);
       }
    }//GEN-LAST:event_viewFullOrderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnSubmitCustServiceRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaCustServiceComments;
    private javax.swing.JTable tblCustomerOrderStatus;
    private javax.swing.JButton viewFullOrder;
    // End of variables declaration//GEN-END:variables
}
