/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.UserRegistration;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Location.LocationPoint;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.WorkQueue.UserRegistrationRequest;
import Business.WorkQueue.WorkQueue;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import Business.Utils.Validation;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.Duration;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javafx.animation.PauseTransition;
import javax.swing.JTextField;
import javax.swing.Timer;
import userinterface.GoogleMAP.OrganizationLocationJPanel;

/**
 *
 * @author Mayank
 */
public class UserRegistrationJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private LocationPoint locationPoint;
    private Validation validation;
    private ActionListener eventListener;
    private boolean emailValid;
    private boolean contactValid;
    private boolean userUnique;
    /**
     * Creates new form UserRegistrationJPanel
     */
    public UserRegistrationJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateNetworkComboBox();
        populateCarrierComboBox();
        validation = new Validation();
        usernameExistsMessage.setVisible(false);
        emailValidateMessage.setVisible(false);
        emailSuccessLabel.setVisible(false);
        userNameSuccessLabel.setVisible(false);
        populateOrgTypes();

    }

    public void populateNetworkComboBox() {
        stateCombo.removeAllItems();
        for (Network network : system.getNetworkList()) {
            stateCombo.addItem(network);
        }
    }

    public void populateCarrierComboBox() {
        contactCarrier.removeAllItems();
        contactCarrier.addItem("ATT");
        contactCarrier.addItem("Sprint");
        contactCarrier.addItem("TMobile");
        contactCarrier.addItem("Verizon");
        contactCarrier.addItem("Airtel");
        contactCarrier.addItem("Mint");
    }
    
    public void populateOrgTypes() {
        orgCombo.addItem(Organization.Type.ManufacturerAdmin);
        orgCombo.addItem(Organization.Type.Customer);
        //orgCombo.addItem(Organization.Type.);
        //orgCombo.addItem(Organization.Type.Hospital);
    }

    public void populateLongituteLatitude(LocationPoint locationPoint) {
        uLocation.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        uLocation.setForeground(Color.BLACK);
        this.locationPoint = locationPoint;
        uLocation.setText(locationPoint.getLatitude() + "," + locationPoint.getLongitude());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        uName = new javax.swing.JTextField();
        uPass = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        uEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        uCity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        uContact = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        uLocation = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        stateCombo = new javax.swing.JComboBox();
        orgCombo = new javax.swing.JComboBox();
        btnRegister = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        contactCarrier = new javax.swing.JComboBox<>();
        usernameExistsMessage = new javax.swing.JLabel();
        emailValidateMessage = new javax.swing.JLabel();
        emailSuccessLabel = new javax.swing.JLabel();
        userNameSuccessLabel = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setAutoscrolls(true);
        setMinimumSize(new java.awt.Dimension(800, 900));
        setPreferredSize(new java.awt.Dimension(800, 900));
        setRequestFocusEnabled(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(25, 56, 82));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("E-commerce User Registration");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(25, 56, 82));
        jLabel2.setText("Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, -1, -1));

        userName.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        userName.setForeground(new java.awt.Color(25, 56, 82));
        userName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameActionPerformed(evt);
            }
        });
        userName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userNameKeyTyped(evt);
            }
        });
        add(userName, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 90, 250, 35));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(25, 56, 82));
        jLabel3.setText("Username");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 150, -1, -1));

        uName.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        uName.setForeground(new java.awt.Color(25, 56, 82));
        uName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                uNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uNameKeyTyped(evt);
            }
        });
        add(uName, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 140, 250, 35));

        uPass.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        uPass.setForeground(new java.awt.Color(25, 56, 82));
        uPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uPassKeyTyped(evt);
            }
        });
        add(uPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 190, 253, 35));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(25, 56, 82));
        jLabel4.setText("Password");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 62, 20));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(25, 56, 82));
        jLabel5.setText("Email Id");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 250, -1, 20));

        uEmail.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        uEmail.setForeground(new java.awt.Color(25, 56, 82));
        uEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uEmailKeyTyped(evt);
            }
        });
        add(uEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 240, 250, 35));

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(25, 56, 82));
        jLabel6.setText("State");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 300, -1, 20));

        uCity.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        uCity.setForeground(new java.awt.Color(25, 56, 82));
        uCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uCityKeyTyped(evt);
            }
        });
        add(uCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 340, 250, 35));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(25, 56, 82));
        jLabel7.setText("City");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 350, -1, -1));

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(25, 56, 82));
        jLabel8.setText("Organization");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 400, -1, 20));

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(25, 56, 82));
        jLabel9.setText("Contact");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 490, -1, 30));

        uContact.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        uContact.setForeground(new java.awt.Color(25, 56, 82));
        uContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uContactActionPerformed(evt);
            }
        });
        uContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                uContactKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                uContactKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uContactKeyTyped(evt);
            }
        });
        add(uContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 490, 250, 35));

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(25, 56, 82));
        jLabel10.setText("Location");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 540, 70, 30));

        uLocation.setEditable(false);
        uLocation.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        uLocation.setForeground(new java.awt.Color(25, 56, 82));
        uLocation.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                uLocationInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        uLocation.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                uLocationPropertyChange(evt);
            }
        });
        uLocation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                uLocationKeyTyped(evt);
            }
        });
        add(uLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 540, 253, 40));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(25, 56, 82));
        jButton1.setText("Set Location");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 540, -1, 30));

        stateCombo.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        stateCombo.setForeground(new java.awt.Color(25, 56, 82));
        stateCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                stateComboItemStateChanged(evt);
            }
        });
        stateCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateComboActionPerformed(evt);
            }
        });
        add(stateCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 290, 250, 35));

        orgCombo.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        orgCombo.setForeground(new java.awt.Color(25, 56, 82));
        orgCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                orgComboKeyTyped(evt);
            }
        });
        add(orgCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, 250, 35));

        btnRegister.setBackground(new java.awt.Color(255, 255, 255));
        btnRegister.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnRegister.setForeground(new java.awt.Color(25, 56, 82));
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });
        add(btnRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 600, -1, -1));

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(25, 56, 82));
        jLabel11.setText("Carrier");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 450, -1, 20));

        contactCarrier.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        contactCarrier.setForeground(new java.awt.Color(25, 56, 82));
        contactCarrier.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        contactCarrier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactCarrierActionPerformed(evt);
            }
        });
        contactCarrier.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contactCarrierKeyTyped(evt);
            }
        });
        add(contactCarrier, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 440, 250, 35));

        usernameExistsMessage.setForeground(new java.awt.Color(255, 0, 0));
        usernameExistsMessage.setText("Username already exists");
        add(usernameExistsMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 140, -1, -1));

        emailValidateMessage.setForeground(new java.awt.Color(255, 0, 0));
        emailValidateMessage.setText("Email format incorrect");
        add(emailValidateMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 250, -1, -1));

        emailSuccessLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/tick1.4.gif"))); // NOI18N
        add(emailSuccessLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 240, -1, -1));

        userNameSuccessLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/tick1.4.gif"))); // NOI18N
        add(userNameSuccessLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 140, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/adduser.png"))); // NOI18N
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/registerTransparent.jpg"))); // NOI18N
        jLabel13.setAutoscrolls(true);
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, 810, 510));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        OrganizationLocationJPanel oLJP = new OrganizationLocationJPanel(userProcessContainer);
        userProcessContainer.add("Organization_Postion_Panel", oLJP);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void stateComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateComboActionPerformed
        /*Network n = (Network) stateCombo.getSelectedItem();
        for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
            for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof VolunteerCompanyOrganization) {
                    orgCombo.addItem(Organization.Type.Company);
                } else if (o instanceof VolunteerNGOOrganization) {
                    orgCombo.addItem(Organization.Type.NGO);
                } else if (o instanceof VolunteerPersonalOrganization) {
                    orgCombo.addItem(Organization.Type.Personal);
                } else if (o instanceof VolunteerHospitalOrganization) {
                    orgCombo.addItem(Organization.Type.Hospital);
                }
            }
        }
        */
    }//GEN-LAST:event_stateComboActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        Network network = (Network) stateCombo.getSelectedItem();
        Organization.Type type = (Organization.Type) orgCombo.getSelectedItem();

        if (network == null) {
            stateCombo.setBorder(BorderFactory.createLineBorder(Color.RED));
            stateCombo.setForeground(Color.red);

        }
        if (uName.getText().isEmpty()) {
            uName.setBorder(BorderFactory.createLineBorder(Color.RED));
            uName.setForeground(Color.red);

        }
        if (userName.getText().isEmpty()) {
            userName.setBorder(BorderFactory.createLineBorder(Color.RED));
            userName.setForeground(Color.red);

        }
        if (uPass.getText().isEmpty()) {
            uPass.setBorder(BorderFactory.createLineBorder(Color.RED));
            uPass.setForeground(Color.red);

        }
        if (uEmail.getText().isEmpty()) {
            uEmail.setBorder(BorderFactory.createLineBorder(Color.RED));
            uEmail.setForeground(Color.red);

        }
        if (uCity.getText().isEmpty()) {
            uCity.setBorder(BorderFactory.createLineBorder(Color.RED));
            uCity.setForeground(Color.red);

        }
        if (type == null) {
            orgCombo.setBorder(BorderFactory.createLineBorder(Color.RED));
            orgCombo.setForeground(Color.red);

        }
        if (uContact.getText().isEmpty()) {
            uContact.setBorder(BorderFactory.createLineBorder(Color.RED));
            uContact.setForeground(Color.red);

        }
        if (locationPoint == null) {
            uLocation.setBorder(BorderFactory.createLineBorder(Color.RED));
            uLocation.setForeground(Color.red);

        }
        if (userName.getText().isEmpty()
                || uPass.getText().isEmpty()
                || uEmail.getText().isEmpty()
                || uCity.getText().isEmpty()
                || type == null
                || uContact.getText().isEmpty()
                || locationPoint == null) {
            JOptionPane.showMessageDialog(null, "Enter all fields");
        } else if(!contactValidity(uContact.getText())){
            JOptionPane.showMessageDialog(null, "Phone format incorrect");
        } 
        else if (emailValid && userUnique) {
            UserRegistrationRequest registrationRequest = new UserRegistrationRequest();
            registrationRequest.setName(userName.getText());
            registrationRequest.setUserName(uName.getText());
            registrationRequest.setUserPassword(uPass.getText());
            registrationRequest.setUserEmailId(uEmail.getText());
            registrationRequest.setNetwork(network);
            registrationRequest.setUserCity(uCity.getText());
            registrationRequest.setOrgType(type);
            registrationRequest.setStatus("Requested");
            registrationRequest.setUserContact(uContact.getText());
            registrationRequest.setUserLocationPoint(locationPoint);
            String contact = "";

            if (contactCarrier.getSelectedItem().equals("ATT")) {
                contact = uContact.getText() + "@txt.att.net";
            } else if (contactCarrier.getSelectedItem().equals("Verizon")) {
                contact = uContact.getText() + "@vmobl.com";
            } else if (contactCarrier.getSelectedItem().equals("Sprint")) {
                contact = uContact.getText() + "@messaging.sprintpcs.com";
            } else if (contactCarrier.getSelectedItem().equals("TMobile")) {
                contact = uContact.getText() + "@tmomail.net";
            }else if (contactCarrier.getSelectedItem().equals("Airtel")) {
                contact = uContact.getText() + "@airtelkk.com";
            }else if (contactCarrier.getSelectedItem().equals("Mint")) {
                contact = uContact.getText() + "@tmomail.net";
            }
            registrationRequest.setContactCarrierName(contact);
            //sendEmailMessage(uEmail.getText());
            //sendTextMessage(contact);
            for (Network network1 : system.getNetworkList()) {
                for (Enterprise enterprise : network1.getEnterpriseDirectory().getEnterpriseList()) {
                    if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Ecommerce) {
                        if (enterprise.getWorkQueue() == null) {
                            enterprise.setWorkQueue(new WorkQueue());
                        }
                        enterprise.getWorkQueue().getWorkRequestList().add(registrationRequest);
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "You have been registered succesfully!");
            uName.setText("");
            userName.setText("");
            uPass.setText("");
            uEmail.setText("");
            uCity.setText("");
            uContact.setText("");
            uLocation.setText("");
        } else if (!emailValid || !contactValid || !userUnique) {
            JOptionPane.showMessageDialog(null, "Invalid credentials");
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void userNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameActionPerformed

    private void userNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameKeyPressed

    private void userNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameKeyTyped
        // TODO add your handling code here:
        userName.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        userName.setForeground(Color.BLACK);
    }//GEN-LAST:event_userNameKeyTyped

    private void uNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_uNameKeyTyped

    private void uPassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uPassKeyTyped
        // TODO add your handling code here:
        uPass.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        uPass.setForeground(Color.BLACK);
    }//GEN-LAST:event_uPassKeyTyped

    private void uEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uEmailKeyTyped
        // TODO add your handling code here:
        if (!validation.emailValidator(uEmail.getText())) {
            emailValidateMessage.setVisible(true);
            emailValid = false;
        } else {
            uEmail.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            uEmail.setForeground(Color.BLACK);
            emailValidateMessage.setVisible(false);
            emailSuccessLabel.setVisible(true);
            emailValid = true;
            int delay = 2500; //milliseconds
            ActionListener taskPerformer = new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    emailSuccessLabel.setVisible(false);
                }
            };
            javax.swing.Timer tick = new javax.swing.Timer(delay, taskPerformer);
            tick.setRepeats(false);
            tick.start();
        }
    }//GEN-LAST:event_uEmailKeyTyped

    private void stateComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_stateComboItemStateChanged
        // TODO add your handling code here:
        stateCombo.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        stateCombo.setForeground(Color.BLACK);
    }//GEN-LAST:event_stateComboItemStateChanged

    private void uCityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uCityKeyTyped
        // TODO add your handling code here:
        uCity.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        uCity.setForeground(Color.BLACK);
    }//GEN-LAST:event_uCityKeyTyped

    private void orgComboKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orgComboKeyTyped
        // TODO add your handling code here:
        orgCombo.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        orgCombo.setForeground(Color.BLACK);
    }//GEN-LAST:event_orgComboKeyTyped

    private void contactCarrierKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactCarrierKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_contactCarrierKeyTyped

    private void uLocationInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_uLocationInputMethodTextChanged
        // TODO add your handling code here:
        uLocation.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        uLocation.setForeground(Color.BLACK);
    }//GEN-LAST:event_uLocationInputMethodTextChanged

    private void uContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uContactKeyTyped
        // TODO add your handling code here:          
    }//GEN-LAST:event_uContactKeyTyped

    private void uLocationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uLocationKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_uLocationKeyTyped

    private void uLocationPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_uLocationPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_uLocationPropertyChange

    private void uNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uNameKeyReleased
        // TODO add your handling code here:
        if (!system.checkIfUserIsUnique(uName.getText())) {
            usernameExistsMessage.setVisible(true);
            userNameSuccessLabel.setVisible(false);
            userUnique = false;
        } else {
            uName.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            uName.setForeground(Color.BLACK);
            usernameExistsMessage.setVisible(false);
            userNameSuccessLabel.setVisible(true);
            userUnique = true;
            int delay = 2500; //milliseconds
            ActionListener taskPerformer = new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    userNameSuccessLabel.setVisible(false);
                }
            };
            javax.swing.Timer tick = new javax.swing.Timer(delay, taskPerformer);
            tick.setRepeats(false);
            tick.start();
        }
    }//GEN-LAST:event_uNameKeyReleased


    private void contactCarrierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactCarrierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactCarrierActionPerformed

    private void uContactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uContactKeyPressed
        // TODO add your handling code here:         
    }//GEN-LAST:event_uContactKeyPressed

    private void uContactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uContactKeyReleased
        // TODO add your handling code here:
//        if(uContact.getText().trim().length() != 11){
//          contactFormatMessage.setVisible(true);
//          contactValid = false;  
//        }
//        else if (!contactValidity(uContact.getText())) {
//            contactFormatMessage.setVisible(true);
//            contactValid = false;
//        } else {
//            uContact.setBorder(BorderFactory.createLineBorder(Color.BLACK));
//            uContact.setForeground(Color.BLACK);
//            contactFormatMessage.setVisible(false);
//            contactSuccessLabel.setVisible(true);
//            contactValid = true;
//            int delay = 2500; //milliseconds
//            ActionListener taskPerformer = new ActionListener() {
//                public void actionPerformed(ActionEvent evt) {
//                    contactSuccessLabel.setVisible(false);
//                }
//            };
//            javax.swing.Timer tick = new javax.swing.Timer(delay, taskPerformer);
//            tick.setRepeats(false);
//            tick.start();
//        }
    }//GEN-LAST:event_uContactKeyReleased

    private void uContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uContactActionPerformed


    public static void sendEmailMessage(String emailId) {
// Recipient's email ID needs to be mentioned.
        String to = emailId;
        String from = "donotreplythriftshopers@gmail.com";
        String pass = "neuthrift";
// Assuming you are sending email from localhost
// String host = "192.168.0.16";

// Get system properties
        Properties properties = System.getProperties();
        String host = "smtp.gmail.com";

        properties.put("mail.smtp.starttls.enable", "true");

        properties.put("mail.smtp.ssl.trust", host);
        properties.put("mail.smtp.user", from);
// properties.put("mail.smtp.password", pass);
        properties.put("mail.smtp.port", "587");
        properties.put("mail.smtp.auth", "true");

// Setup mail server
// properties.setProperty("mail.smtp.host", host);
// properties.put("mail.smtp.starttls.enable", "true");
// Get the default Session object.
        Session session = Session.getDefaultInstance(properties);

        try {
// Create a default MimeMessage object.
            MimeMessage message = new MimeMessage(session);

// Set From: header field of the header.
            message.setFrom(new InternetAddress(from));

// Set To: header field of the header.
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));

// Set Subject: header field
            message.setSubject("Volunteer Registration");
            message.setText("Thank you for registering with us. Your account will be activated within 24 hours. We will keep you posted in case of emergencies.");
// Send message
            Transport transport = session.getTransport("smtp");
            transport.connect(host, from, pass);
            transport.sendMessage(message, message.getAllRecipients());
            transport.close();
            System.out.println("Sent message successfully....");
        } catch (MessagingException mex) {
            mex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Invalid email id");
        }
    }

    public static void sendTextMessage(String contact) {
        // Recipient's email ID needs to be mentioned.
        String to = contact;
        System.out.println(contact);
        String from = "donotreplythriftshopers@gmail.com";
        String pass = "neuthrift";
        // Assuming you are sending email from localhost
        // String host = "192.168.0.16";
        // Get system properties
        Properties properties = System.getProperties();
        String host = "smtp.gmail.com";
        properties.put("mail.smtp.starttls.enable", "true");
        properties.put("mail.smtp.ssl.trust", host);
        properties.put("mail.smtp.user", from);
        // properties.put("mail.smtp.password", pass);
        properties.put("mail.smtp.port", "587");
        properties.put("mail.smtp.auth", "true");
        // Setup mail server
        // properties.setProperty("mail.smtp.host", host);
        //  properties.put("mail.smtp.starttls.enable", "true");
        // Get the default Session object.
        Session session = Session.getDefaultInstance(properties);
        //       final PasswordAuthentication auth = new PasswordAuthentication(from, pass);
//Session session = Session.getDefaultInstance(properties, new Authenticator() {
//    @Override
//    protected PasswordAuthentication getPasswordAuthentication() { return auth; }
//});
//Session session = Session.getInstance(properties);
        try {
            // Create a default MimeMessage object.
            MimeMessage message = new MimeMessage(session);

            // Set From: header field of the header.
            message.setFrom(new InternetAddress(from));

            // Set To: header field of the header.
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));

            // Set Subject: header field
            message.setSubject("User Registration");
            message.setText("Thank you for registering with us. Your account will be activated within 24 hours. We will keep you posted in case of emergencies.");
            // Send message
            Transport transport = session.getTransport("smtp");
            transport.connect(host, from, pass);
            transport.sendMessage(message, message.getAllRecipients());
            transport.close();
            System.out.println("Sent message successfully....");
        } catch (MessagingException mex) {
            mex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Invalid email id");
        }
    }

    public Boolean contactValidity(String custContact) {
        String regex = "^\\(?([0-9]{3})\\)?[-.\\s]?([0-9]{3})[-.\\s]?([0-9]{4})$";
        Pattern pattern = Pattern.compile(regex);
        
        Matcher matcher = pattern.matcher(custContact);
        if(matcher.matches()){
            return true;
        }
        return false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegister;
    private javax.swing.JComboBox<String> contactCarrier;
    private javax.swing.JLabel emailSuccessLabel;
    private javax.swing.JLabel emailValidateMessage;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox orgCombo;
    private javax.swing.JComboBox stateCombo;
    private javax.swing.JTextField uCity;
    private javax.swing.JTextField uContact;
    private javax.swing.JTextField uEmail;
    private javax.swing.JTextField uLocation;
    private javax.swing.JTextField uName;
    private javax.swing.JTextField uPass;
    private javax.swing.JTextField userName;
    private javax.swing.JLabel userNameSuccessLabel;
    private javax.swing.JLabel usernameExistsMessage;
    // End of variables declaration//GEN-END:variables
}
