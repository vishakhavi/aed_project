/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.wholeSaleSupplierRole;


import Business.EcoSystem;
import Business.Product.Product;

import Business.UserAccount.UserAccount;
import Business.Organization.WholeSaleSupplierOrganization;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arthi
 */
public class WholeSaleSupplierWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;

    private UserAccount userAccount;
    EcoSystem ecosystem;
    WholeSaleSupplierOrganization supplier;
    private DefaultTableModel viewTable;
    
    private static final Object[] columnNames = {"Product Name", "Price", "Category", "Product Image"};
    /**
     * Creates new form WholeSaleSupplierWorkAreaJPanel
     */
    public WholeSaleSupplierWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system, WholeSaleSupplierOrganization s) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
      
        this.userAccount = account;
        this.ecosystem = system;
        this.supplier = s;
        
        valueLabel.setText(this.supplier.getName());
        
        populateProductsTable();
    }
    
    public void populateProductsTable(){
        viewTable =  new DefaultTableModel(null,columnNames){
          @Override
          public Class<?> getColumnClass(int column) {
              if (column==3) return Icon.class;
              return Object.class;
           }
        };
        
        viewTable.setRowCount(0);
        
        for (Product p : this.supplier.getProductDirectory().getProducts()) {
            Object row[] = new Object[4];
            row[0] = p;
            row[1] = p.getPrice();
            row[2] = p.getCategory();

            String temp = p.getProductImagePath();
            if(temp != null)
            {
                ImageIcon ii = new ImageIcon(temp);
                Image resizedImage = ii.getImage();
                ii = new ImageIcon(resizedImage.getScaledInstance(60, 60, Image.SCALE_SMOOTH));
                row[3] = ii;
            }
            else
            {    
                row[3] = "No image";
            }

            viewTable.addRow(row); 
        }
        
        productsJTable.setRowHeight(80);
        productsJTable.setModel(viewTable);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        productsJTable = new javax.swing.JTable();
        requestTestJButton = new javax.swing.JButton();
        refreshTestJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        productsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Price", "Category", "Product Image"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(productsJTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(300, 170, 790, 160);

        requestTestJButton.setText("Add a new Product");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        add(requestTestJButton);
        requestTestJButton.setBounds(570, 340, 150, 23);

        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        add(refreshTestJButton);
        refreshTestJButton.setBounds(1000, 100, 90, 23);

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Supplier");
        add(enterpriseLabel);
        enterpriseLabel.setBounds(300, 100, 127, 30);

        valueLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel);
        valueLabel.setBounds(540, 100, 232, 26);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Optimized-supplier Icon on top.PNG"))); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(10, 10, 120, 120);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Whole sale supplier.png"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(310, 340, 790, 310);
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
        CreateSupProductsJPanel cspj = new CreateSupProductsJPanel(userProcessContainer, this.supplier);
        userProcessContainer.add("createSupProducts", cspj);
        CardLayout layout = (CardLayout)this.userProcessContainer.getLayout();
        layout.next(userProcessContainer);   
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateProductsTable();
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable productsJTable;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
